"""
A,B =map(int,input().split())
print(A+B)

A,B =map(int,input().split())
print(A-B)

A,B =map(int,input().split())
print(A*B)

A,B =map(int,input().split())
print(A/B)

A,B =map(int,input().split())
print(A+B)

print(A-B)

print(A*B)

print(A//B)

print(A%B)

x=input()
print(x +"??!")

y =int(input())       #-543
print(y-543)

a, b, c=map(int,input().split())  #a,b,c로 나누기
print(a +b +c)

# \\    \/\\
#  \)  \( \'\)
# \(  \/  \)
#  \\\(__\)\|

# \    /\
#  )  ( ')
# (  /  )
#  \(__)|

print("\\    /\\")
print(" )  ( \')")
print("(  /  )")
print(" \\(__)|")

"""

#입출력과 사칙연산 (나머지,곱셈,개) !숙제
"""
A ,B ,C =map(int,input().split())
print((A+B)%C)
print(((A%C) + (B%C))%C)
print((A*B)%C)
print(((A%C) * (B%C))%C)

A=int(input())
B=int(input())
Bb=list(map(int,str(B)))
print(Bb[2]*A)
print(Bb[1]*A)
print(Bb[0]*A)
print(A*B)
"""
# |\_/|
# |q p|   /}
# ( 0 )"""\
# |"^"`    |
# ||_/=\\__|

print("|\\_/|")
print("|q p|   /}")
print("( 0 )\"\"\"\\")
print("|\"^\"`    |")
print("||_/=\\\\__|")




#\n =enter
#산술연산자, 바교연산자, 논라연산자(and, or, not)
#비교연산자

#불(True, False)
#비교연산자의 판단에 따라 출력
# == 같다
# != 다르다
#문자열또한 구분 가능
#문자열또한 대소 비교 가능
#아스키코드로 비교가능
# is 값이 같더라도 자료형이 다르면 False반환
"""
a =1
print(id(1))
print(id(1.0))
print(id(a))
print(id('a'))
print(id(97))
"""

#논라연산자
#and,or,not
#and, or 2개의 값 필요
#not 1개의 값만 필요
#and 양쪽 모두 참인경우 True반환
#or 양족 중 적어도 하나 이상 참인 경우 True반환
#not 참값의 반대 값을 반환
#not, and, or 순서로 진행

#bool
#int,float 0은 False o을 제외한 모든 숫자는 true
#문자열에서 '',""(null) 제외 모든 문자열은 True

#단락평가: 첫번째 값으로 결과가 확정적이라면 두번째 값은 판단하지 않는 것
#마지막으로 단락평가를 실행한 값을 반환
"""
korean =92
english =47
mathematics =86
science =81

print((korean >49) and (english >49)and(mathematics >49) and(science >49))
"""

#문자열
#'' 혹은 ""로 생성
#''',"""로 줄 변환
#\로 (함수)도 문자로
#"""는 """가 다시 나올때까지 문자열로 인식

#리스트

# []로 묶으면 리스트가 되고, ,(콤마)로 구분합니다
#a =[123, 23, 4, 1, 10, 12]
# 리스트에 저장된 값 요소를 element라 합니다
# 자료형: int, str, float, bool, list, complex, range, tuple
# 자료형 전부다 리스트로 변환 가능
#range 또한 자료형
#range(start_elem, end_elem, step)(시작
#range의 마지막 값은 표시X

#tuple 값 추가,변경,삭제 불가능
#튜플에서 값을 지우고 싶다면 리스트로 변환 후 삭제 그리고 다시 튜플로 전환
#요소가 변경되어서는 안되는 경우

#리스트와 튜플에 문자열을 넣는다면 하나씩 분리돠서 출력

#a, b, c = 10, 20, 30 은 튜플
#튜플 = a, b ,c

# range() 함수를 이용해서 tuple 만들기
# (-5, -2, 1, 4, 7, 10)
#여기서 음수 값 제거해보기

t1 =tuple(range(-5, 13, 3))
num =0

while num <=0:
  if t1[num] <=0:
    t1 =list(t1)
    del t1[num]
    tuple(t1)
  elif t1[num] >=0:
    num +=1

print(t1)
