# 3 + 4

# def calc(f ,c ,s):
#     if c =="+":
#         return f +s
#     elif c =="-":
#         return f -s
#     elif c =="*":
#         return f *s
#     elif c =="/":
#         return f /s
#
#
# a =input()
# #1.인덱싱
# first_num = int(a[0])
# calc_str = a[2]
# second_num = int(a[4])
#
# print(calc(first_num ,calc_str ,second_num)) #calc함수 호출


#2.문자열 함수 split()
# def calc(f ,c ,s):
#     if c =="+":
#         return f +s
#     elif c =="-":
#         return f -s
#     elif c =="*":
#         return f *s
#     elif c =="/":
#         return f /s
#
# inputed =input()
#
# inputed_split = inputed.split(" ")
# print(inputed_split)
# print(calc(int(inputed_split[0]) ,inputed[1] ,int(inputed[1] ,int(inputed_split[2]))))


#3.뛰어쓰기를 사용하지 않을경우 join and split사용   #\로 코드 분할 가능
# def calc(f ,c ,s):
#     if c =="+":
#         return f +s
#     elif c =="-":
#         return f -s
#     elif c =="*":
#         return f *s
#     elif c =="/":
#         return f /s
#
# inputed =input()
# inputed_join =" ".join(inputed)
# inputed_split = inputed_join.split(" ")
# print(inputed_split)
# print(calc(int(inputed_split[0]) ,inputed[1] ,int(inputed[1] ,int(inputed_split[2]))))
a =0
id_lst =input()
#아이디의 길이는 3자 이상 15자 이하여야 합니다.
if len(id_lst) <4:
    quit()
elif len(id_lst) >15:
    quit()
#아이디는 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.) 문자만 사용할 수 있습니다.
while True:
    if id_lst.islower() == "false":
        id_lst =id_lst.lower
    a +=1
    if a >15:
        break
#단, 마침표(.)는 처음과 끝에 사용할 수 없으며 또한 연속으로 사용할 수 없습니다.
from collections import OrderedDict
''.join(OrderedDict.fromkeys(id_lst))
if id_lst[:] ==".":
    quit()
print(id_lst)
#new_id가 빈 문자열이라면, new_id에 "a"를 대입합니다.
a =input()
id_lst =a
#new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.
#만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.

#new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다.




a =" ".join(input()).split(" ")
