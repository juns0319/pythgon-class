#재귀 함수(return이용해서 탈출)

# def func():
#     print(10)
#     func()
#     return 10
#
# func()

# def func(i):
#     print(i)
#     if i ==0:
#         return
#     return func(i -1)
#
# func(10)

#특징
#1.자기자신을 실행
#2.점화식(재귀를 시삭하게 하는 코드)
#3.탈출식(재귀를 마치게 하는 코드)
# i= int(input())
# max_num =0
# min_num =1
# b =0
# def Fibonacci(i ,max_num ,min_num ,b):
#     b =max_num +min_num
#     print(b)
#     if i ==0:
#         return
#     return(i -1)
#     max_num =min_num +b
#     print(max_num)
#     if i ==0:
#         return
#     return(i -1)
#     min_num =b +max_num
#     print(min_num)
#     if i ==0:
#         return
#     return(i -1)
# Fibonacci(max_num ,min_num ,i ,b)

# n =int(input())
# def func_re(x ,y ,n2 ,count):
#     if count ==n2:
#         return
#     print(x +y)
#     return func_re(y ,x +y ,n2 ,count +1)
#
# print(0)
# print(1)
# func_re(0 ,1 , n -2 ,0)

# n =int(input())
# def fib(n):
#     if n <3:
#         return 1
#     return fib(n-1) +fib(n -2)
#
# for i in range(n):
#     print(fib(i))

#매개변수 지정

# def myfunc(a ,b ,c ,d):
#     return a +b +c +d
#
# print(myfunc(1 ,2 ,3 ,4))
# print(myfunc(b =5 ,d =10 ,a =9 ,c =6))
#순서 상관없이 지정하여 인자를 적용할 수 있다


#print함수 옵션
#특수 명령문자
#\n :개행 문자
#\t :들여쓰기 문자

#print("abcdefg\nhijk\tlmnop")

#end옵션
# print("abc" ,end ="") #end의 기본 설정은 "\n"이다
#print("def")
